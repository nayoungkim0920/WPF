1. 프로그램설계
원격지의 클라이언트들을 관리하는 서버 프로그램과 클라이언트프로그램 개발
주요기능 : 대기/접속/해제, 텍스트 통신, 원격실행, 주요기능 DLL(디자인스타일, 로그스타일)
개발언어 및 패턴 : WPF, C#, MVVM(Model-View-ViewModel) 디자인 패턴 적용
Model → 비즈니스 로직 및 데이터 처리 (예: 데이터베이스 접근)
ViewModel → Model의 데이터를 가공하여 View에 전달
View → ViewModel과 데이터 바인딩을 사용하여 UI 업데이트
View는 ViewModel을 참조하지만, ViewModel은 View를 참조하지 않음.
이로 인해 UI가 변경되더라도 Model과 ViewModel에는 영향을 주지 않아 유지보수가 쉬워짐
개발툴 : Visual Studio 2022, MSSQL 2022 EXPRESS

1) 데이터베이스설계
c:\>sqlcmd -S NAYOUNGKIM\SQLEXPRESS -U sa -P "****"

1>CREATE TABLE ServerInfo (
2>     ID VARCHAR(10) PRIMARY KEY,
3>     IPAddress VARCHAR(15),
4>     Port INT
5> );
6> GO
1> INSERT INTO ServerInfo (ID, IPAddress, Port)
2> VALUES
3>     ('S00001', '127.0.0.1', 5000);
5> GO
1> SELECT * FROM ServerInfo;
2> GO
ID         IPAddress       Port
---------- --------------- -----------
S00001     127.0.0.1              5000
(1개 행 적용됨)

1> CREATE TABLE ClientInfo (
2>     ID VARCHAR(10) PRIMARY KEY,
3>     IPAddress VARCHAR(15),
4>     Port INT
5> );
6> GO
1> INSERT INTO ClientInfo (ID, IPAddress, Port)
2> VALUES
3>     ('C00001', '192.168.0.3', 3000),
4>     ('C00002', '127.0.0.1', 4000);
5> GO
1> SELECT * FROM ClientInfo;
2> GO
ID         IPAddress       Port
---------- --------------- -----------
C00001     192.168.0.3            3000
C00002     127.0.0.1              4000

(2개 행 적용됨)

WpfServerApp, WpfClientApp 각각 설치
VisualStudio 2022 > 도구 > NuGet 패키지 관리 > 패키지 관리자 콘솔 > 
Install-Package Microsoft.Data.SqlClient

2) 프로그램설계
Solution1
|-Solution1.Shared.Wpf (DLL) PowerShell : dotnet build Solution1.Shared.Wpf
|    |-Behaviors
|    |    |_AutoScrollBehavior.cs
|    |-Converters
|    |    |_LogLevelConverter.cs
|    |_Styles
|         |_GlobalStyles.xaml (빌드작업:리소스)
|-WpfAppServer (추가 > 프로젝트참조 : Solution1.Shared.Wpf)
|    |-Converters
|    |    |-BooleanToColorConverter.cs
|    |    |-BooleanToVisibilityConverter.cs
|    |    |_InvertedBooleanToVisibilityConverter.cs
|    |-Helpers
|    |    |_RelayCommand.cs
|    |-Models
|    |    |_ClientInfo.cs
|    |-Services
|    |    |-DatabaseServices.cs
|    |    |_NetworkServices.cs
|    |-ViewModels
|    |    |_ServerViewModel.cs
|    |-Views
|    |    |_MainWindow.xaml
|    |        |_MainWindow.xaml.cs
|    |-App.xaml
|    |_AssemblyInfo.cs
|_WpfAppClient (추가 > 프로젝트참조 : Solution1.Shared.Wpf)
     |-Converters
     |    |_AliveStatusColorConverter.cs
     |-Services
     |    |-DatabaseServices.cs
     |    |_NetworkServices.cs
     |-ViewModels
     |    |_ClientViewModel.cs
     |-Views
     |    |_MainWindow.xaml
     |        |_MainWindow.xaml.cs
     |-App.xaml
     |_AssemblyInfo.cs

3) 업그레이드
3-1-1) Fluent 테마 
Fluent 테마 설치
도구 > NuGet 패키지 관리자 > 패키지 관리자 콘솔
PM> Install-Package Fluent.Ribbon -Version 10.1.0
PM> Get-Package Fluent.Ribbon
Id                                  Versions                                 ProjectName                                                              
--                                  --------                                 -----------                                                              
Fluent.Ribbon                       {10.1.0}                                 Solution1.Shared.Wpf                                                     
Fluent.Ribbon                       {10.1.0}                                 WpfAppServer    

Fluent 테마 제거
기본프로젝트 : WpfAppServer
PM> Uninstall-Package Fluent.Ribbon
PM> Get-Package Fluent.Ribbon
Id                                  Versions                                 ProjectName                                                              
--                                  --------                                 -----------                                                              
Fluent.Ribbon                       {10.1.0}                                 Solution1.Shared.Wpf   

DLL 네임스페이스와 클래스 찾기
https://github.com/icsharpcode/ILSpy/releases
ILSpy_Installer_9.0.0.7889-x64.msi 다운로드
C:\Users\nayou\AppData\Local\Programs\ILSpy 설치

"C:\wpfProject\Solution1\WpfAppServer\bin\Debug\net8.0-windows\Fluent.dll"

실패

3-1-2) ThemeManager 클래스로 테마 기능 추가, 테마를 서버는 콤보박스, 클라이언트는 라디오박스로 선택
Solution1
|_Solution1.Shared.Wpf (DLL) PowerShell : dotnet build Solution1.Shared.Wpf
     |-Styles
     |    |-Dark.xaml
     |    |_Light.xaml
     |_Themes
          |_ThemeManager.cs

3-2) Meterial Design 적용
패키지관리자콘솔로 각각 설치 및 설정
기본프로젝트 : Solution1.Shared.Wpf, WpfAppServer, WpfAppClient
Install-Package MaterialDesignColors
Install-Package MaterialDesignThemes

3-3) LiveChart 적용 : 연결상태 실시간 그래프 기능 추가
패키지관리자콘솔
기본프로젝트 : WpfAppServer
Install-Package LiveCharts.Wpf



